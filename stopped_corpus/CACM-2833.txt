


an efficient incremental automatic garbage collector

this paper describes solving
the storage reclamation problem system 
as lisp allocates storage a
heap require programmer give 
any indication items longer useful
or accessible reference count scheme 
reclaiming non-self-referential structures linearizing 
compacting copying scheme reorganize 
all storage users discretion proposed the
algorithms designed work systems 
which multiple levels storage large virtual
address space depend fact 
most cells referenced exactly reference
counts need accurate storage 
is reclaimed transaction stores changes
to reference counts multiple reference 
table stores count items referenced 

cacm september 1976

deutsch 
bobrow 

storage management garbage collection lisp

4.19

ca760906 jb january 4 1978 8 58 am

1708	4	2833
1781	4	2833
1826	4	2833
1860	4	2833
1972	4	2833
2156	4	2833
2156	4	2833
2168	4	2833
2168	4	2833
2249	4	2833
2314	4	2833
2438	4	2833
2719	4	2833
2723	4	2833
2736	4	2833
2736	4	2833
2833	4	2833
2833	4	2833
2833	4	2833
2845	4	2833
2855	4	2833
3074	4	2833
3112	4	2833
3112	4	2833
1626	5	2833
1826	5	2833
2736	5	2833
2833	5	2833
2833	5	2833
2833	5	2833
2855	5	2833
2944	5	2833
3112	5	2833
106	6	2833
1380	6	2833
1549	6	2833
1826	6	2833
1826	6	2833
210	6	2833
1972	6	2833
1972	6	2833
2438	6	2833
2513	6	2833
2723	6	2833
2736	6	2833
2766	6	2833
2833	6	2833
2833	6	2833
2833	6	2833
2838	6	2833
2998	6	2833
2998	6	2833
731	6	2833



